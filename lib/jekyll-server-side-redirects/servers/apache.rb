module Jekyll
    module ServerSideRedirects
        module Apache
            def self.generate_redirects(site)
                redirects_data = []

                redirects_data += process_redirects(site.pages)
                redirects_data += process_redirects(site.posts.docs)
                generate_htaccess(redirects_data)

                redirects_data
            end

            def self.generate_htaccess(redirects_data)
                file_path = ".htaccess"
                existing_redirects = []

                if File.exist?(file_path)
                    existing_redirects = parse_existing_redirects(file_path)
                end

                all_redirects = (existing_redirects + redirects_data).uniq { |r| r['source'] }

                File.open(file_path, "w") do |file|
                    file.puts "# .htaccess file generated by Jekyll Server-Side Redirects"
                    file.puts ""

                    all_redirects.each do |redirect|
                        file.puts "Redirect #{redirect['type']} #{redirect['source']} #{redirect['destination']}"
                    end
                end
            end

            def self.parse_existing_redirects(file_path)
                redirects = []

                File.readlines(file_path).each do |line|
                    next unless line.strip.start_with?("Redirect")

                    if line =~ /^Redirect\s+(\d{3})\s+(\S+)\s+(\S+)/
                        type, source, destination = $1.to_i, $2, $3
                        redirects << {
                            'source' => source,
                            'destination' => destination,
                            'type' => type
                        }
                    end
                end

                redirects
            end

            def self.process_redirects(data)
                redirects = []
                data.each do |item|
                    next unless item.data['redirect_from']

                    redirect_from = item.data['redirect_from']
                    redirect_from = [redirect_from] unless redirect_from.is_a?(Array)

                    redirect_from.each do |source|
                        redirects << {
                            'source' => source,
                            'destination' => item.permalink,
                            'type' => item.data['redirect_type'] || 301 
                        }
                    end
                end
                redirects
            end
        end
    end
end
